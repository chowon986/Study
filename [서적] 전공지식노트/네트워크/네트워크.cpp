// [서적] 전공지식노트

// 네트워크 토폴로지

/*
노드와 링크가 어떻게 배치되어 있는지에 대한 방식이자 연결 형태

* 트리 토폴로지
계층형 토폴로지라고 하며, 트리 형태로 배치한 네트워크 구성
노드의 추가, 삭제가 쉬우며 특정 노드에 트래픽이 집중될 때 하위 노드에 영향을 끼칠 수 있음

* 버스 토폴로지
중앙 통신 회선 하나에 여러 개의 노드가 연결되어 공유하는 네트워크 구성
근거리 통신망(LAN)에서 사용함
설치 비용이 적고 신뢰성이 우수하며 중앙 통신 회선에 노드를 추가하거나 삭제하기 쉬움
그러나 *스푸핑이 가능한 문제점이 있음

* 스타 토폴로지
중앙에 있는 노드에 모두 연결된 네트워크 구성
노드를 추가하거나 에러를 탐지하기 쉽고 패킷의 충돌 발생 가능성이 적음
어떤 노드에 장애가 발생해도 쉽게 에러를 처리할 수 있으며 장애 노드가 중앙 노드가 아닐 경우 다른 노드에 영향을 끼치는 것이 적음
중앙 노드에 장애가 발생하면 전체 네트워크를 사용할 수 없고 설치 비용이 고가임

* 링형 토폴로지
각자의 노드가 양 옆의 두 노드와 연결하여 전체적으로 고리처럼 하나의 연속된 길을 통해 통신을 하는 망 구성 방식
데이터는 노드에서 노드로 이동하게 되며, 각각의 노드는 고리 모양의 길을 통해 패킷 처리
노드 수가 증가되어도 네트워크상의 손실이 거의 없고 충돌이 발생되는 가능성이 적고 노드의 고장 발견을 쉽게 찾을 수 있음
네트워크 구성 변경이 어렵고 회선에 장애가 발생하면 전체 네트워크에 영향을 크게 끼침

* 메시 토폴로지
망형 토폴로지라고도 하며 그물망처럼 연결되어 있는 구조
한 단말 장치에 장애가 발생해도 여러 개의 경로가 존재하므로 네트워크를 계속 사용할 수 있고 트래픽도 분산 처리가 가능
하지만 노드의 추가가 어렵고 구축 비용과 운용 비용이 고가임
*/

// 네트워크 분류

/*
* LAN(Local Area Network)
근거리 통신망을 의미하며 같은 건물이나 캠퍼스 같이 좁은 공간에서 운영됨
전송 속도가 빠르고 혼잡하지 않음

* MAN(Metropolitan Area Network)
대도시 지역 네트워크를 나타내며 도시 같이 넓은 지역에서 운영됨
전송 속도는 평균이며 LAN보다 혼잡함

* WAN(Wide Area Network)
광역 네트워크를 의미하며 국가 또는 대륙 같은 더 넓은 지역에서 운영됨
전송 속도는 낮으며 MAN보다 혼잡함
*/

// TCP/IP 4계층 모델

/*
* 애플리케이션 계층
FTP, HTTP, SSH, SMTP, DNS 등 응용 프로그램이 사용되는 프로토콜 계층이며
웹 서비스, 이메일 등 서비스를 실질적으로 사람들에게 제공하는 층

* 전송 계층
송신자와 수신자를 연결하는 통신 서비스를 제공하며
연결 지향 데이터 스트림 지원, 신뢰성, 흐름 제어를 제공할 수 있으며
애플리케이션과 인터넷 계층 사이의 데이터가 전달될 때 중계 역할을 함 (TCP / UDP)

- TCP
패킷 사이의 순서를 보장하고 연결 지향 프로토콜을 사용해서 연결을 하여
신뢰성을 구축해서 수신 여부를 확인하며 '가상회선 패킷 교환 방식'을 사용

- TCP 연결 성립 과정 3-way handshake
(1) SYN 단계
클라이언트는 서버에 클라이언트의 ISN을 담아 SYN을 보냄
ISN은 새로운 TCP 연결의 첫 번째 패킷에 할당된 임의의 시퀀스 번호를 말함

(2) SYN + ACK 단계
서버는 클라이언트의 SYN을 수신하고 서버의 ISN을 보내며 승인번호로 클라이언트의 ISN + 1을 보냄

(3) ACK 단계
클라이언트는 서버의 ISN + 1한 값인 승인번호를 담아 ACK 서버에 보냄

- TCP 연결 해제 과정 4-way handshake
(1) 클라이언트가 연결을 닫으려고 할 때 FIN으로 설정된 세그먼트를 보냄
  그리고 클라이언트는 FIN_WAIT_1 상태로 들어가고 서버의 응답을 기다림

(2) 서버는 클라이언트로 ACK라는 승인 세그먼트를 보냄 그리고 CLOSE_WAIT 상태에 들어감
  클라이언트가 세그먼트를 받으면 FIN_WAIT_2 상태에 들어감

(3) 서버는 ACK를 보내고 일정 시간 이후에 클라이언트에 FIN이라는 세그먼트를 보냄

(4) 클라이언트는 TIME_WAIT 상태가 되고 다시 서버로 ACK를 보내서 서버는 CLOSED 상태가 됨
  이후 클라이언트는 어느 정도의 시간을 대기한 후 연결이 닫히고 클라이언트와 서버의 모든 자원의 연결이 해제됨
  -> 일정 시간을 대기하는 이유는 지연 패킷이 발생할 경우를 대비하기 위함과 두 장치가 연결이 닫혔는지 확인하기 위함임

-  UDP
순서를 보장하지 않고 수신 여부를 확인하지 않으며
단순히 데이터만 주는 '데이터그램 패킷 교환 방식'을 사용

* 인터넷 계층
장치로부터 받은 네트워크 패킷을 IP 주소로 지정된 목적지로 전송하기 위해 사용되는 계층
(IP, ARP, ICMP 등)

* 링크 계층
전선, 광섬유, 무선 등으로 실질적으로 데이터를 전달하며
장치 간에 신호를 주고받는 규칙을 정하는 계층
*/

// 인터넷 계층을 처리하는 기기

/*
* 라우터
여러 개의 네트워크를 연결, 분할, 구분시켜주는 역할을 함
"다른 네트워크에 존재하는 장치끼리 서로 데이터를 주고 받을 때
패킷 소모를 최소화하고 경로를 최적화하여 최소 경로로 패킷을 포워딩" 하는 라우팅을 하는 장비

* L3 스위치
L2 스위치의 기능과 라우팅 기능을 갖춘 장비
L3 스위치를 라우터라고 해도 무방함
라우터는 소프트웨어 기반의 라우팅과 하드웨어 기반의 라우팅을 하는 것으로 나눠지고
하드웨어 기반의 라우팅을 담당하는 장치를 L3 스위치라고 함
*/

// 데이터 링크 계층을 처리하는 기기

/*
* L2 스위치
장치들의 MAC 주소를 MAC 주소 테이블을 통해 관리하며
연결된 장치로부터 패킷이 왔을 때 패킷 전송을 담당함

* 브리지
두 개의 근거리 통신망(LAN)을 상호 접속할 수 있도록 하는 통신망 연결 장치
포트와 포트 사이의 다리 역할을 하며 장치에서 받아온 MAC 주소를 MAC 주소 테이블로 관리
브리지는 통신망 범위를 확장하고 서로 다른 LAN 등으로 이루어진 '하나의' 통신망을 구축할 때 쓰임
*/

// 물리 계층을 처리하는 기기

/*
* NIC
LAN 카드라고 하는 네트워크 인터페이스 카드는 2대 이상의 컴퓨터 네트워크를
구성하는 데 사용하며, 네트워크와 빠른 속도로 데이터를 송수신 할 수 있도록
컴퓨터 내에 설치하는 확장 카드
각 LAN카드에는 각각을 구분하기 위한 고유의 식별번호인 MAC 주소가 있음

* 리피터
들어오는 약해진 신호 정도를 증폭하여 다른 쪽으로 전달하는 장치
이를 통해 패킷이 더 멀리 갈 수 있음
광케이블이 보급됨에 따라 현재는 잘 쓰이지 않는 장치

* AP (Access Point)
패킷을 복사하는 기기
AP에 유선 LAN을 연결한 후 다른 장치에서 무선 LAN 기술을 사용하여
무선 네트워크 연결 가능 (와이파이)
*/

// IP 주소

/*
*ARP
IP 주소로부터 MAC 주소를 구하는 IP와 MAC 주소의 다리 역할을 하는 프로토콜
컴퓨터와 컴퓨터 간의 통신은 MAC 주소를 기반으로 통신함
ARP를 통해 가상 주소인 IP 주소를 실제 주소인 MAC 주소로 변환함
반대로 RARP를 통해 실제 주소인 MAC 주소를 가상 주소인 IP 주소로 변환하기도 함
*/

// 브로드캐스트 유니캐스트

/*
* 브로드캐스트
송신 호스트가 전송한 데이터가 네트워크에 연결된 모든 호스트에 전송되는 방식

* 유니캐스트
고유 주소로 식별된 하나의 네트워크 목적지에 1:1로 데이터를 전송하는 방식
*/

// 홉바이홉 통신

/*
IP 주소를 통해 통신하는 과정을 홉바이홉 통신이라고 함
즉 통신 장치에 있는 '라우팅 테이블'의 IP 주소를 통해 시작 주소부터 시작하여
다음 IP로 계속해서 이동하는 '라우팅' 과정을 거쳐 패킷이 최종 목적지에 도달하는 통신
*/

// 라우팅 테이블

/*
송신지에서 수신지까지 도달하기 위해 사용되며
라우터가 들어가 있는 목적지 정보들과 그 목적지로 가기 위한 방법이
들어 있는 리스트를 뜻함
라우팅 테이블에는 게이트웨이와 모든 목적지에 대해 해당 목적지에
도달하기 위해 거쳐야 할 다음 라우터의 정보를 가지고 있음
(IPv4 경로 테이블 ,IPv6 경로 테이블 등)
*/

// 게이트 웨이

/*
서로 다른 통신망, 프로토콜을 사용하는 네트워크 간의 통신을
가능하게 하는 관문 역할을 하는 컴퓨터나 소프트웨어를 두루 일컫는 용어
*/

// IP 주소 체계

/*
* IPv4
32비트를 8비트 단위로 점을 찍어 표기하며 123.45.67.89 같은 방식으로 IP 주소를 나타냄

* IPv6
64비트를 16비트 단위로 점을 찍어 표기하며 2001:db8::ff00:42:8329 같은 방식으로 IP 주소를 나타냄
*/

// DHCP

/*
IP 주소 및 기타 통신 매개변수를 자동으로 할당하기 위한 네트워크 관리 프로토콜
네트워크 장치의 IP 주소를 수동으로 설정할 필요 없이 인터넷에 접속할 때마다 자동으로 IP 주소 할당 가능
*/

// NAT

/*
패킷이 라우팅 장치를 통해 전송되는 동안 패킷의 IP 주소 정보를 수정하여
IP 주소를 다른 주소로 매핑하는 방법
IPv4 주소 체계만으로는 많은 주소들을 모두 감당하지 못하는 단점이 있는데
이를 해결하기 위해 NAT로 공인 IP와 사설 IP로 나눠서 많은 주소를 처리함

NAT를 이용하면 내부 네트워크에서 사용하는 IP 주소와 외부에 드러나는 IP 주소를
다르게 유지할 수 있기 때문에 내부 네트워크에 대한 어느 정도의 보안이 가능

그러나 여러 명이 동시에 인터넷을 접속하게 되므로 실제로 접속하는 호스트 숫자에 따라
접속 속도가 느려질 수 있다는 단점이 있음
*/

// HTTP/1

/*
애플리케이션 계층으로 웹 서비스 통신에 사용됨
HTTP/1.0부터 시작해서 지금은 HTTP/3임

* HTTP/1.0
HTTP/1.0은 기본적으로 한 연결당 하나의 요청을 처리하도록 설계됨
이는 RTT 증가를 불러오게 되었음
서버로부터 파일을 가져올 때 마다 TCP의 3-way handshake를 계속해서
열어야 하기 때문에 RTT가 증가하는 단점이 있었음

(참고)
RTT는 패킷이 목적지에 도달하고 나서 다시 출발지로 돌아오기까지 걸리는 시간(패킷 왕복 시간)

* RTT의 증가를 해결하기 위한 방법
매번 연결할 때 마다 RTT가 증가하니 서버에 부담이 많이 가고 사용자 응답 시간이 길어짐
이를 해결하기 위해 이미지 스플리팅, 코드 압축, 이미지 Base64 인코딩을 사용하곤 했음

(참고)
* 이미지 스플리팅
많은 이미지가 합쳐 있는 하나의 이미지를 다운 받고, 이를 기반으로 background-image의 position을 이용하여 이미지 표기

* 코드 압축
코드를 압축해서 개행 문자, 빈칸을 없애서 코드의 크기를 최소화하는 방법

* 이미지 Base64 인코딩
이미지 파일을 64진법으로 이루어진 문자열로 인코딩하는 방법
서버와의 연결을 열고 이미지에 대해 서버 HTTP에 요청을 할 필요가 없지만
Base64 문자열로 변환 시 37% 정도 크기가 더 커짐

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

* HTTP/1.1
TCP 3-way handshake가 발생하면 그 다음부터 발생하지 않음
하지만 문서 안에 포함된 다수의 리소스를 처리하려면 요청할 리소스 개수에 비례해서 대기 시간이 길어짐
헤더에 쿠키 등 많은 메타데이터가 들어 있고 압축이 되지 않아 무거웠음

(참고)
* HOL Blocking
네트워크에서 같은 큐에 있는 패킷이 그 첫 번째 패킷에 의해 지연될 때 발생하는 성능 저하 현상

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

* HTTP/2
멀티플렉싱, 헤더 압축, 서버 푸쉬, 요청의 우선순위 처리를 지원하는 프로토콜

(참고)
* 멀티플렉싱
여러 개의 스트림을 사용하여 송수신한다는 것
특정 스트림의 패킷이 손실되었다고 하더라도 해당 스트림에만 영향을 미치고 나머지 스트림은 멀쩡하게 동작 가능
*/

// HTTPS

/*
HTTP/2는 HTTPS 위에서 동작함
HTTPS는 애플리케이션 계층과 전송 계층 사이에 신뢰 계층인 SSL/TLS 계층을 넣은
신뢰할 수 있는 HTTP 요청을 말함
이를 통해 '통신을 암호화'함

* SSL/TLS
전송 계층에서 보안을 제공하는 프로토콜
클라이언트와 서버가 통신을 할 때 SSL/TLS를 통해 제 3자가 메시지를 도청하거나 변조하지 못하도록 함
*/

// HTTP/3

/*
HTTP/3은 QUIC라는 계층 위에서 돌아가며 TCP 기반이 아닌 UDP 기반으로 돌아감
멀티 플렉싱을 가고 있으며 초기 연결 설정 시 지연 시간 감소라는 장점이 있음
QUIC는 순방향 오류 수정 매커니즘이 적용되어 전송한 패킷이 손실되었다면
수신 측에서 에러를 검출하고 수정하는 방식임
열악한 네트워크 환경에서도 낮은 패킷 손실률을 자랑함
*/

// OSI7계층과 TCP/IP 4계층의 차이는?

/*
OSI 7계층은 애플리케이션 계층을 3 개로 쪼개고, 링크 계층을 2개로 쪼개서 설명하는 것이 다르며
인터넷 계층을 네트워크 계층으로 부름
*/

// HTTP/2를 설명하고 장점 두 가지를 설명하세요

/*
HTTP/2는 HTTP/1.x 보다 지연 시간을 줄이고 응답 시간을 더 빠르게 할 수 있으며
멀티 플렉싱, 헤더 압축, 서버 푸시, 요청의 우선순위 처리를 지원하는 프로토콜임

(1) 멀티 플렉싱 : 여러 개의 스트림을 사용하여 송수신함
이를 통해 특정 스트림의 패킷이 손실되었다고 하더라고 해당 스트림에만 영향을 미치고
나머지 스트림은 멀쩡하게 동작 가능

(2) 서버 푸시 : HTTP/1.1에서는 클라이언트가 서버에 요청을 해야 파일을 다운로드 받을 수 있었다면
HTTP/2는 클라이언트 요청 없이 서버가 바로 리소스를 푸쉬함
*/

// OSI 7계층

/*
* 응용 계층 (L7)
애플리케이션에 대한 서비스 제공

* 표현 계층 (L6)
문자 코드, 압축, 암호화 등의 방식으로 데이터 변환

* 세션 계층 (L5)
세션 연결 / 설정 / 해제와 통신 방식 결정

* 전송 계층 (L4)
신뢰성 있고 정확성 있는 전달

- TCP
연결형(패킷 교환 방식)으로 전송 순서를 보장하는 프로토콜
-> 세션 연결 확립 시 거치는 과정 (3-way-handshake) : (1) SYN -> (2) SYN + ACK -> (3) ACK
-> 세션 연결 종료 시 거치는 과정 (4-way handshake) : (1) FIN -> (2) ACK -> (3) FIN -> (4) ACK

신뢰성을 보장하는 방법 (에러 정정, ARQ) : (1) Stop-and-wait (2) Go-Back-N (3) Selective Repeat

- UDP
비연결형(데이터그램 방식)으로 TCP보다 빠르지만 신뢰성 있는 데이터 전송을 보장하지 않는 프로토콜

* 네트워크 계층 (L3)
한 네트워크에서 다른 네트워크로 데이터 전송

* 데이터 링크 계층 (L2)
네트워크 기기간의 데이터 전송과 물리 주소를 결정

* 물리 계층 (L1)
데이터를 전기 신호로 변환하는데 필요한 계층
*/