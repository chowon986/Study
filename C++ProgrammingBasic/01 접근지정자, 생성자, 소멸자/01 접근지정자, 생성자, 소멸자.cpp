#include <iostream>
#include <string>
using namespace std;

// 모든 멤버 데이터가 public 영역에 있다면
// 객체 생성시 구조체 초기화 문법({}사용)으로 멤버를 초기화할 수 있다.

// 멤버 데이터가 private 영역에 있다면
// 구조체 초기화 문법을 사용할 수 없다.
// 멤버를 초기화하는 멤버 함수를 제공해야한다.
// 객체 생성시 초기화 함수를 자동으로 호출되게 할 수 없을까?

// 생성자와 소멸자
// (1) 생성자
// 클래스이름() 모양의 함수 : 객체를 생성할 때 자동으로 호출되는 함수
// -> 반환 타입을 표기하지 않고, 값을 반환할 수 엇ㅂ다.
// -> 인자는 없어도 되고, 있어도 된다. 2개 이상 만들 수도 있다.
// -> 객체를 생성하면 자동으로 생성자가 호출된다.
// " 해당하는 모양(인자)의 생성자가 있어야 객체를 생성할 수 있다. "

// 인자가 없는 생성자 = 디폴트 생성자
// 사용자가 생성자를 한 개도 만들지 않으면 컴파일러가 디폴트 생성자를 제공한다.

// (2) 소멸자
// ~클래스이름() 모양의 함수 : 객체가 파괴될 때 자동으로 호출되는 함수


class Person
{
private:
	string name;
	int age;

public:
	Person()
	{
		name = "kim";
		age = 20;
		cout << "Constructor" << endl;
	}

	Person(int a, int b)
	{

	}
};

int main()
{
	Person p;
	Person arr1[5]; // 1번 5회
	Person arr2[5] = { {1,2},{1,1} }; // 2번 2회, 1번 3회
}
