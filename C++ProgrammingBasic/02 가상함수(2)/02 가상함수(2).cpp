// 가상 함수의 원리

#include <iostream>

int main()
{
}

// 컴파일러마다 실제 가상함수 테이블은 다를 수 있지만
// 이런 원리들로 이루어진다.
// 컴파일러는 눈에 보이지는 않지만 기본 클래스 내 가상 함수들의 주소를 담고 있는 테이블을 생성한다.
// 기본 클래스의 포인터 형식이 파생 클래스를 가리키면
// 해당 내용이 함께 전달이 되고, 파생 클래스에서 a라는 함수를 재정의 하면
// 기본 클래스의 포인터 형식 파생 클래스를 가리키고, a 함수를 부르는 경우
// 파생 클래스에서 오버라이딩 한 a 함수가 발동된다.


// 객체당 한 개의 가상함수 테이블을 가리키는 포인터 추가
// 가상함수 테이블
// 함수 호출 시메모리를 한번 더 호출
// 가상 함수는 인라인 불가
// (인라인은 컴파일 할 때 하는건데 가상 함수는 실행중에 하는 거니까 불가)


